Para um projeto Django & MySQL

1. Instalar dependencias

pip install django dj-static gunicorn django-bootstrap-v5 django-stdimage django-adminlte3 model_mommy coverage PyMySQl MySQL
pip install django dj-static gunicorn django-bootstrap-v5 django-stdimage django-adminlte3 model_mommy coverage psycopg2-binary


2. Frezaaaa!
pip freeze > requirements.txt

3. Novo projeto
django-admin startproject [nome-projeto] .

3. Novo app
django-admin startapp [nome-app]

4. Arquivo settings.py

===== CTRL + C ===== 

"""
Django settings for django2 project.

Generated by 'django-admin startproject' using Django 4.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'adminlte3', # General use templates & template tags (should appear first)
    'adminlte3_theme', # Optional: Django admin theme (must be before django.contrib.admin)
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'core',
    'bootstrap5',
    'stdimage',
]

MIDDLEWARE = [
    -- Adcionar
    #'Whitenoise.middleware.WhiteNoiseMiddleware' # <- Para produção
]

TEMPLATES = [
    -- Adcionar
        'DIRS': ['templates'],

]

#MySQL Database
"""
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': '[DB-NAME]',
        'USER': '[DB-USER]',
        'PASSWORD': '[DB-PASSWORD]',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}
"""

#PostgreSQL Database
"""
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': '[DB-NAME]',
        'USER': '[DB-USER]',
        'PASSWORD': '[DB-PASSWORD]',
        'HOST': '127.0.0.1',
        'PORT': '5432'
    }
}
"""

# Internationalization

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Recife'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles/')
MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

AUTH_USER_MODEL = 'usuarios.CustomUsuario'

====================

5. Criar urls.py do app

6. Criar pasta templates

7. Criar pasta static

8. Criar o arquivo .coveragerc.txt na raiz do projeto com o conteudo:
    [run]

    source = .

    omit =
        */__init__.py
        */settings.py
        */manage.py
        */wsgi.py
        */apps.py
        */urls.py
        */admin.py
        */migrations/*.py
        */tests/*.py

9. Rodar comandos
    python manage.py collectstatic
    python manage.py makemigrations 
    python manage.py migrate 
    python manage.py createsuperuser
    python manage.py runserver


Tudo certo!
 